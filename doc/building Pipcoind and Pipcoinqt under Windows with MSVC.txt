1. Preparing the system.
Note: this instruction (including soputstvuyushie files) is designed for assembly on Windows 64-bit.

1.1 Installing 7z archiver: http://www.7-zip.org/
(When writing instructions used 7-Zip 9.20 64 bit X64, but most likely any version will do)

1.2 Installing Visual Studio 2012. (will suit even the free version)
http://www.microsoft.com/ru-ru/download/details.aspx?id=34673
Install Visual Studio 2012 Update 4 Update
http://www.microsoft.com/ru-ru/download/details.aspx?id=39305

1.3 Installing Perl (for writing instruction used ActivePerl-5.16.3.1604-MSWin32-x86-298023.msi)
http://www.activestate.com/activeperl/downloads
Make sure that after you install Perl in the PATH has the path (I have Perl was installed on drive C: \) C: \ Perl \ site \ bin; C: \ Perl \ bin;

1.4 Python installation (suitable and version 2 and version 3) (with the writing instructions used Python 3.3.3)
https://www.python.org/downloads/
Make sure that after installation of Python in the PATH is the path to python.exe

1.5 Installing NASM (when writing instructions used nasm-2.07-installer.exe)
http://sourceforge.net/projects/nasm/files/latest/download
Make sure that after installing Nasm in PATH is the path to Nasm.exe

2. Building dependency.
The instruction dependencies are stored in the folder C: \ MyProjects \ Deps
Copy the build-helpers (stored in the archive of the source directory in MSVC) and paste it into the folder C: \ MyProjects \ Deps

2.1 OpenSSL
-Download http://www.openssl.org/source/openssl-1.0.2.tar.gz
-Raspakuyte File in the folder C: \ MyProjects \ Deps
-Open A Windows command prompt and run the following code:

cd C: \ MyProjects \ Deps \ build-helpers
buildopenssl.bat


2.2 Berkeley DB
-Download http://download.oracle.com/berkeley-db/db-6.0.20.tar.gz
-Raspakuyte File in the folder C: \ MyProjects \ Deps
-Run Visual Studio 2012
-Open C: \ MyProjects \ Deps \ db-6.0.20 \ build_windows \ Berkeley_DB_vs2010.sln
-Vyberete Project db
-Change The configuration on the Static Debug Debug
-Press Right-click on the project db, then "Properties" -> "General" make sure that the character set "Use multi-byte encoding"
-Browse In the "C / C ++" -> "Preprocessor" -> "Preprocessor definitions" and remove _UNICODE and the UNICODE, also make sure that there is no inherited value
_UNICODE And UNICODE
-Press Right-click on the project db, then "Only Project" -> "Build only db"
-Postroyte So all configuration Static (Static Debug 32 bit, Static Release 32 bit, Static Debug X64, Static Release X64)

Check:
If you did everything correctly then you will have files:
C: \ MyProjects \ Deps \ db-6.0.20 \ build_windows \ Win32 \ Static Release \ libdb60s.lib
C: \ MyProjects \ Deps \ db-6.0.20 \ build_windows \ Win32 \ Static Debug \ libdb60sd.lib
C: \ MyProjects \ Deps \ db-6.0.20 \ build_windows \ x64 \ Static Release \ libdb60s.lib
C: \ MyProjects \ Deps \ db-6.0.20 \ build_windows \ x64 \ Static Debug \ libdb60sd.lib

2.3 Boost
-Download http://sourceforge.net/projects/boost/files/boost/1.57.0/boost_1_57_0.7z/download
-Raspakuyte Boost_1_57_0.7z in the folder C: \ MyProjects \ Deps
-Open A Windows command prompt and run the following code:

cd C: \ MyProjects \ Deps \ build-helpers
buildboost.bat

2.4 qrencode
-Download http://qrencode-win32.googlecode.com/archive/681f2ea7a41f919486d9932b3352a2e6920e1cb9.zip
-Raspakuyte
-Open A Windows command prompt and run the following code:

cd C: \ MyProjects \ Deps \ build-helpers
buildqrcode.bat

2.5 Qt 5
-Download http://download.qt-project.org/official_releases/qt/5.3/5.3.2/single/qt-everywhere-opensource-src-5.3.2.7z
-Raspakuyte In C: \ MyProjects \ Deps
-If You need support for 64 bit, then rename the qt-everywhere-opensource-src-5.3.2 to qt-everywhere-opensource-src-5.3.2-64
(If you need the ability to build and 32 bit and 64 bit binaries, then you must have both folders and qt-everywhere-opensource-src-5.3.2-64 and qt-everywhere-opensource-src-5.3.2)
-Open A Windows command prompt and run the following code:

cd C: \ MyProjects \ Deps \ build-helpers
buildqt32.bat

or 64-bit

cd C: \ MyProjects \ Deps \ build-helpers
buildqt64.bat


3. Compilation
We keep the source code in the folder C: \ MyProjects

3.0 Preparation of the Microsoft Visual Studio 2012 to work
-Open Microsoft Visual Studio 2012
-Press Tools -> Settings .. -> Text Editor -> All languages ​​-> Tab and check the box "Insert spaces"
(If you have the English version, it looks like this: Tools-> Options-> Text Editor-> All Languages-> Tabs and check the box "Insert Spaces" instead of "Keep Tabs".)

3.1 Download the source code
-Zaydite Https://github.com/PipCoin-project/PipCoin on site
-Press Download ZIP
-Raspakuyte PipCoin-master.zip in C: \ MyProjects
-pereimenuyte PipCoin-master in PipCoin

3.2 Compilation
-Open Microsoft Visual Studio 2012
-Open The file C: \ MyProjects \ PipCoin \ MSVC \ PipCoinSolution.sln
-Can Compile and PipCoinD and PipCoinQT
(The default is exposed to the compilation LevelDB, if you want to compile with BerkleyDB, the
-Vyberete Project libcommon, go to Properties -> C \ C ++ -> Preprocessor remove USE_LEVELDB
-Remove From the project libcommon libcommon -> Source Files -> txdb-leveldb.cpp and add to the project
txdb-bdb.cpp
-Remove From the project libcommon libcommon -> Header Files -> txdb-leveldb.h and add to the project
txdb-bdb.h
-Vyberete Project PipCoinD, go to Properties -> C \ C ++ -> Preprocessor remove USE_LEVELDB
-Vyberete Project PipCoinQT, go to Properties -> C \ C ++ -> Preprocessor remove USE_LEVELDB

If you want to reduce the size of binary files,
1) Visit the website http://upx.sourceforge.net/#downloadupx
2) Download the program in accordance with your system
3) Extract the program to a folder with binary files PipCoin.
4) Enter the console
upx -9 PipCoinD.exe
then
upx -9 PipCoinQT.exe

And your PipCoinD and PipCoinQT become less ~ 3 times.